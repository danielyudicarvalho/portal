version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=game_portal
      - POSTGRES_USER=gameuser
      - POSTGRES_PASSWORD=gamepass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gameuser -d game_portal"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile.nextjs
    ports:
      - "3000:3000"
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_MULTIPLAYER_URL=ws://localhost:3002
      - DATABASE_URL=postgresql://gameuser:gamepass123@postgres:5432/game_portal
      - NEXTAUTH_URL=http://localhost:3000
      - REDIS_URL=redis://redis:6379
      # Stripe configuration from .env.local will be loaded
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      multiplayer-server:
        condition: service_started
    command: sh -c "npx prisma migrate deploy && npm run dev"

  multiplayer-server:
    build:
      context: .
      dockerfile: Dockerfile.multiplayer
      target: dev
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - MULTIPLAYER_PORT=3002
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: