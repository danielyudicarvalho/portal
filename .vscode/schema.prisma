// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  firstName   String?
  lastName    String?
  avatar      String?
  balance     Float    @default(0)
  isActive    Boolean  @default(true)
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  favorites     UserFavorite[]
  gameHistory   GameSession[]
  
  @@map("users")
}

model Game {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String
  thumbnail   String
  provider    String
  isActive    Boolean  @default(true)
  isFeatured  Boolean  @default(false)
  popularity  Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  categoryId    String
  category      GameCategory @relation(fields: [categoryId], references: [id])
  favorites     UserFavorite[]
  gameHistory   GameSession[]
  tags          GameTag[]
  
  @@map("games")
}

model GameCategory {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String
  icon        String
  order       Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  games Game[]
  
  @@map("game_categories")
}

model GameSession {
  id        String    @id @default(cuid())
  startTime DateTime  @default(now())
  endTime   DateTime?
  duration  Int?      // in seconds
  
  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id])
  gameId String
  game   Game   @relation(fields: [gameId], references: [id])
  
  @@map("game_sessions")
}

model UserFavorite {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  
  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id])
  gameId String
  game   Game   @relation(fields: [gameId], references: [id])
  
  @@unique([userId, gameId])
  @@map("user_favorites")
}

model GameTag {
  id   String @id @default(cuid())
  name String @unique
  
  // Relations
  gameId String
  game   Game   @relation(fields: [gameId], references: [id])
  
  @@map("game_tags")
}

enum Role {
  USER
  ADMIN
}